swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User Transactions API
      description: API for fetching all transactions of a user
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: User Transaction Detail API
      description: API for fetching details of a specific transaction by its ID
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to fetch
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields or Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update User Transaction API
      description: API for updating the category and note of a specific transaction by its ID
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction attributes (Category and Note only)
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields or Transaction not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete Note from User Transaction API
      description: API for deleting the note of a specific transaction by its ID
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction from which the note is to be deleted
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note deleted successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields or Transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: ID of the transaction
      date:
        type: string
        format: date-time
        description: Date of the transaction
      title:
        type: string
        description: Title of the transaction
      transactionType:
        type: string
        description: Type of transaction (e.g. credit, debit)
      category:
        type: string
        description: Category of the transaction
      note:
        type: string
        description: Note or description related to the transaction
      amount:
        type: number
        format: float
        description: Amount of the transaction
      balanceAfterTransaction:
        type: number
        format: float
        description: Account balance after this transaction
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: Category of the transaction
      note:
        type: string
        description: Note or description related to the transaction
